[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 1 products, 1 sources, 3 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/TP_MR.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/test/scala/TP_MR.scala), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(TP_MR$User,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$Employee$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$Employee,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$,ModifiedNames(changes = UsedName(lastA,[Default]), UsedName(doubleMonoid,[Implicit]), UsedName(lastB,[Default]), UsedName(notify,[Default]), UsedName(reverseA,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(giveMeHelloString,[Default]), UsedName(notifyAll,[Default]), UsedName(salarySum,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(tupleMonoid,[Implicit]), UsedName(skiRatingAverage,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(iterableWithCombineAll,[Implicit]), UsedName(nthB,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(average,[Default]), UsedName($asInstanceOf,[Default]), UsedName(reverseB,[Default]), UsedName(User,[Default]), UsedName(getRatingsByDepartement,[Default]), UsedName(Monoid,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(nthA,[Default]), UsedName(intMonoid,[Implicit]), UsedName(Employee,[Default]), UsedName(addressOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(TP_MR,[Default]), UsedName(equals,[Default]))), NamesChange(TP_MR$User$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe TP_MR$User has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) TP_MR$User: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) TP_MR$User.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TP_MapReduce_Test: Set(UsedName(==,[Default]), UsedName(User,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe TP_MR$Employee$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) TP_MR$Employee$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) TP_MR$Employee$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TP_MapReduce_Test: Set(UsedName(==,[Default]), UsedName(Employee,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe TP_MR$Employee has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) TP_MR$Employee: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) TP_MR$Employee.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TP_MapReduce_Test: Set(UsedName(==,[Default]), UsedName(Employee,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe TP_MR$ has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(doubleMonoid,[Implicit]), UsedName(tupleMonoid,[Implicit]), UsedName(iterableWithCombineAll,[Implicit]), UsedName(intMonoid,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) TP_MR$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) TP_MR$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of TP_MR$ are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	TP_MapReduce_Test[0m
[0m[[0m[0mdebug[0m] [0m[0mThe TP_MR$User$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) TP_MR$User$: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) TP_MR$User$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TP_MapReduce_Test: Set(UsedName(==,[Default]), UsedName(User,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/test/scala/TP_MR.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(TP_MR$User,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$Employee$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$Employee,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(salary,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(TP_MR;Employee;init;,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(Employee,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))), NamesChange(TP_MR$,ModifiedNames(changes = UsedName(lastA,[Default]), UsedName(doubleMonoid,[Implicit]), UsedName(lastB,[Default]), UsedName(notify,[Default]), UsedName(reverseA,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]), UsedName(giveMeHelloString,[Default]), UsedName(notifyAll,[Default]), UsedName(salarySum,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(tupleMonoid,[Implicit]), UsedName(skiRatingAverage,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(iterableWithCombineAll,[Implicit]), UsedName(nthB,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(average,[Default]), UsedName($asInstanceOf,[Default]), UsedName(reverseB,[Default]), UsedName(User,[Default]), UsedName(getRatingsByDepartement,[Default]), UsedName(Monoid,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(nthA,[Default]), UsedName(intMonoid,[Implicit]), UsedName(Employee,[Default]), UsedName(addressOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(TP_MR,[Default]), UsedName(equals,[Default]))), NamesChange(TP_MR$User$,ModifiedNames(changes = UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(productElementName,[Default]), UsedName(TP_MR;User;init;,[Default]), UsedName(ne,[Default]), UsedName(productElement,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$2,[Default]), UsedName(User,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productElementNames,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(address,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(unapply,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(TP_MapReduce_Test)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(TP_MapReduce_Test)[0m
[0m[[0m[0mdebug[0m] [0m[0mall 1 sources are invalidated[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: TP_MapReduce_Test[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to D:\efrei\cours\s8\Data engineer\github\TP_MR-Scala\TP_MR\target\scala-2.13\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.4.4:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4e35283e for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.1\scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\efrei\cours\s8\Data engineer\github\TP_MR-Scala\TP_MR\target\scala-2.13\test-classes;D:\efrei\cours\s8\Data engineer\github\TP_MR-Scala\TP_MR\target\scala-2.13\classes;C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.13\3.1.0\scalatest_2.13-3.1.0.jar;C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.1.0\scalatest-compatible-3.1.0.jar;C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.13\3.1.0\scalactic_2.13-3.1.0.jar;C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.1\scala-reflect-2.13.1.jar;C:\Users\Arnaud\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.13\1.2.0\scala-xml_2.13-1.2.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.1952201 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
